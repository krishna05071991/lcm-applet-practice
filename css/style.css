/********************************************
 * 1) GLOBAL & BODY STYLES
 *********************************************/
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: "Roboto", "Segoe UI", sans-serif;
  background-color: #e0e8ef;
  color: #333;
  line-height: 1.5;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
}

/********************************************
 * 2) APPLET CONTAINER (16:9 Aspect Ratio)
 *********************************************/
.applet-container {
  aspect-ratio: 16 / 9;
  max-width: 100%;
  max-height: 100vh;
  width: 100%;
  display: flex;
  flex-direction: column;
  margin: 0 auto;
  overflow: hidden;
  box-shadow: 0 1vh 3vw rgba(0, 0, 0, 0.15);
  background-color: #6ca0dc;
  background-image: url("../assets/DarkBG.jpg");
  background-size: cover;
  background-position: center;
  position: relative;
  gap: 1vw;
}

/* Initial State: Right panel hidden, left panel centered */
.initial-state .right-panel-content {
  display: none;
}
.initial-state .main-layout {
  justify-content: center;
  align-items: center;
}
.initial-state .left-panel-anchor {
  width: 50%;
  max-width: 40vw;
  justify-content: center;
  height: 80%;
}
.initial-state .speech-bubble-container {
  max-height: 50%;
}
.initial-state .character-display {
  height: 60%;
}
.initial-state .contextBox::after {
  bottom: -2.8vh;
  left: 25%;
  transform: translateX(-50%);
}

/********************************************
 * 3) TITLE BAR
 *********************************************/
.titleBar {
  background: rgba(0, 0, 0, 0.15);
  backdrop-filter: blur(0.8vw);
  padding: 1vh 2vw;
  color: white;
  text-align: center;
  display: none;
}

/********************************************
 * 4) MAIN LAYOUT
 *********************************************/
.main-layout {
  flex: 1;
  display: flex;
  flex-direction: row;
  overflow: hidden;
  padding: 0 1vw;
  gap: 1vw;
}

.left-panel-anchor {
  width: 30%;
  max-width: 20vw;
  min-width: 15vw;
  position: relative;
  display: flex;
  flex-direction: column;
  gap: 1vh;
  justify-content: flex-end;
}

.character-display {
  width: auto;
  height: 50%;
  z-index: 3;
}

#characterImageElement {
  width: auto;
  height: 100%;
  display: block;
  object-fit: contain;
}

.speech-bubble-container {
  width: 100%;
  position: relative;
  z-index: 1;
  padding: 0.5vw;
  display: flex;
  flex-direction: column;
  max-height: 48%;
}

.contextBox {
  background: rgba(255, 255, 255, 0.92);
  padding: 2vh 2vw;
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  border-radius: 2vw;
  position: relative;
  box-shadow: 0 5px 2vw rgba(0, 0, 0, 0.15);
  border: 2px solid rgba(0, 140, 255, 0.5);
  transition: background-color 0.3s ease, border-color 0.3s ease;
}

.contextBox::after {
  content: "";
  position: absolute;
  bottom: -2.8vh;
  right: 20%;
  width: 0;
  height: 0;
  border: 1.5vw solid transparent;
  border-top-color: rgba(255, 255, 255, 0.92);
  border-bottom: 0;
  transition: border-top-color 0.3s ease;
}

.contextBox.correct {
  background: rgba(194, 255, 197, 0.95);
  border: 2px solid rgba(0, 255, 13, 0.5);
}
.contextBox.correct::after {
  border-top-color: rgba(194, 255, 197, 0.95);
}
.contextBox.incorrect {
  background: rgba(255, 212, 212, 0.95);
  border: 2px solid rgba(255, 72, 0, 0.5);
}
.contextBox.incorrect::after {
  border-top-color: rgba(255, 212, 212, 0.95);
}

.contextBox .context-section h2 {
  font-size: calc(0.5rem + 1.25vw);
  color: #4169e1;
  margin-bottom: 0.5vh;
  font-weight: 600;
}
.contextBox .context-section div > p {
  font-size: calc(0.5rem + 0.9vw);
  margin-bottom: 1vh;
  color: #444;
}
.contextBox .context-section div{
  font-size: calc(0.5rem + 0.9vw);
}
.right-panel-content {
  padding: 2vh 0;
  flex: 1;
  display: flex;
  flex-direction: column;
  min-width: 0;
}

/********************************************
 * 5) WORKING AREA CONTAINER
 *********************************************/
.workingArea-container {
  flex: 1;
  display: flex;
  flex-direction: column;
  padding: 1.5vh 1vw 0 1vw;
  background-color: rgba(77, 86, 110, 0.55);
  backdrop-filter: blur(0.5vw);
  border-radius: 1.5vw;
  overflow: hidden;
  border: 1px solid rgba(255, 255, 255, 0.12);
}

#activity-area {
  flex: 1;
  border-radius: 1.5vw;
  background-color: rgba(41, 45, 58, 0.7);
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  padding: 2vh 1vw;
  gap: 1vw;
}

.lowerControls {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1vh 1vw;
  gap: 1vw;
  color: #e0e0e0;
  font-size: calc(0.5rem + 1.25vw);
  min-height: 8vh;
  flex-wrap: wrap;
}

/********************************************
 * 6) Applet Specific CSS
 *********************************************/

/* --- Hammer Intro Screen --- */
.hammer-intro-container {
  width: 40%;
  position: relative;
}
.hammer-intro-container img {
  width: 100%;
}

/* --- Main Game Layout --- */
.game-layout {
  display: none;
  width: 100%;
  height: 100%;
  gap: 1vw;
  transition: opacity 0.5s ease-out;
}
.game-layout.visible {
  display: flex;
}

.hammer-area {
  width: 25%;
  height: 100%;
  position: relative;
  border: 2px dashed rgba(255, 255, 255, 0.2);
  border-radius: 1vw;
  background: rgba(0, 0, 0, 0.1);
  padding: 1vw;
}
.factor-tree-area {
  flex: 1;
  height: 100%;
  position: relative;
  border-radius: 1vw;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  transition: opacity 0.5s ease-in-out;
}

.factor-tree-area.faded {
  opacity: 0.1;
  pointer-events: none;
}

.breakdown-text {
  color: #fff;
  font-size: calc(0.5rem + 1.2vw);
  text-align: center;
  position: absolute;
  bottom: 2vh;
  left: 50%;
  transform: translateX(-50%);
  width: max-content;
  max-width: 90%;
  padding: 0.5vh 2vw;
  background: rgba(0, 0, 0, 0.4);
  border-radius: 1vw;
  backdrop-filter: blur(3px);
  z-index: 0;
}
.breakdown-text:empty{
  opacity: 0;
}

/* --- Hammers --- */
.hammer {
  position: absolute;
  width: 14vw;
  cursor: pointer;
  transition: transform 0.3s ease-in-out, top 0.5s ease-in-out,
    left 0.5s ease-in-out;
  z-index: 10;
}
.hammer img {
  width: 100%;
}
.hammer.disabled {
  pointer-events: none;
}
.hammer:hover:not(.disabled) {
  transform: scale(1.1);
}
.hammer::after {
  content: attr(data-number);
  position: absolute;
  top: 45%;
  left: 25%;
  transform: translate(-50%, -50%);
  font-size: 3vw;
  font-weight: bold;
  color: #d4a668;
  text-shadow: -0.05vw -0.05vw 0.02vw #f8d5ab;
  filter: drop-shadow(0.05vw 0.05vw 0.02vw #3f2603);
}
.hammer-swing {
  animation: swing 0.5s ease-in-out;
}
@keyframes swing {
  0% {
    transform: rotate(10deg);
  }
  50% {
    transform: rotate(-60deg);
  }
  100% {
    transform: rotate(10deg);
  }
}

/* --- Factor Tree --- */
.tree-node-wrapper {
  position: absolute;
  display: flex;
  flex-direction: column;
  align-items: center;
  transition: opacity 0.5s ease-in-out, top 0.5s ease-in-out,
    left 0.5s ease-in-out, transform 0.5s ease-in-out;
  z-index: 1;
}

.tree-node {
  width: 5.6vw;
  height: 5.6vw;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 2vw;
  font-weight: bold;
  color: white;
  background: linear-gradient(45deg, #096ac5, #18abe6);
  box-shadow: 0 0.5vh 0px #01519b, 0 1vh 2vh rgba(0, 0, 0, 0.3);
  transition: all 0.3s ease;
  z-index: 2;
  position: relative;
}
.tree-node.prime {
  background: linear-gradient(145deg, #2d9d49, #4caf50);
  box-shadow: 0 0.5vh 0px #1b5e20;
  border-radius: 10%;
  width: 4vw;
  height: 4vw;
}
.tree-node.incorrect {
  background: linear-gradient(145deg, #d32f2f, #f44336);
  box-shadow: 0 0.5vh 0px #b71c1c;
  animation: shake 0.5s ease-in-out;
}
.tree-node.faded,
.faded {
  opacity: 0.3;
  transition: opacity 0.5s ease;
}

.node-entering {
  opacity: 0;
  transform: scale(0) !important;
}

.line {
  position: absolute;
  bottom: 50%;
  left: 50%;
  width: 3px;
  background-color: rgba(255, 255, 255, 0.7);
  transform-origin: bottom center;
  z-index: 1;
  transition: height 0.5s ease-in-out 0.2s, transform 0.5s ease-in-out 0.2s;
}
.inline-hammer-wrapper {
  display: inline-block;
  position: relative;
  vertical-align: middle;
  margin: 0 0.2em;
}

.inline-hammer {
  width: 4.25em;
  height: 2.5em;
  object-fit: contain;
}
.strike-effect {
  position: absolute;
  width: 10vw;
  height: 10vw;
  z-index: 100;
  pointer-events: none;
  transform: translate(-50%, -50%);
}

/* --- LCM Graph Styles --- */
.lcm-area {
  width: 100%;
  height: 100%;
  display: none;
  justify-content: center;
  align-items: center;
}
.lcm-area.visible {
  display: flex;
}

/* Main wrapper for one graph (label, rods, equation) */
.lcm-graph-wrapper {
  display: flex;
  flex-direction: row;
  align-items: center;
  width: 100%;
  padding: 2vh 1vw 0.5vh 1vw;
  gap: 2vw;
  position: relative;
  transition: all 0.5s ease-in-out;
  border: 2px dashed #2d8dfb;
  border-radius: 1vw;
  background: rgba(45, 151, 251, 0.1);
}
.lcm-graph-wrapper.faded {
  opacity: 0.2;
  filter: grayscale(80%);
}
.lcm-graph-wrapper.highlight-box {
  border: 3px solid #fba92d;
  border-radius: 1vw;
  background: rgba(251, 169, 45, 0.1);
}

.lcm-graph-root-label {
  width: 5.6vw;
  height: 5.6vw;
  background: linear-gradient(45deg, #096ac5, #18abe6);
  color: white;
  font-size: 2vw;
  font-weight: bold;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  box-shadow: 0 0.5vh 0px #01519b;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  flex-shrink: 0;
}
.lcm-graph-root-label.clickable {
  cursor: pointer;
  box-shadow: 0 0 0.6vw 0.3vw #ffee00;
}
.lcm-graph-root-label.clickable:hover {
  transform: scale(1.1);
  box-shadow: 0 0.4vh 0px #01519b, 0 0 0.5vw #6cbfff;
}
.lcm-graph-root-label.shake {
  animation: shake 0.5s ease-in-out;
}
.lcm-graph-root-label.lcm-label {
  background: none;
  box-shadow: none;
  font-size: 1.5vw;
  color: #fba92d;
  width: auto;
  text-align: center;
}

/* Container for rods and axis */
.lcm-graph-container {
  flex-grow: 1;
  height: 100%;
  display: flex;
  gap: 1vh;
  flex-direction: column;
}

.lcm-graph {
  flex-grow: 1;
  height: 100%;
  position: relative;
  display: flex;
  justify-content: space-around;
  align-items: flex-end;
  padding: 1vh 0;
  transition: height 0.5s ease-in-out;
}

.lcm-graph-equation {
  color: #fff;
  font-size: calc(0.5rem + 1.25vw);
  width: 25%;
  flex-shrink: 0;
  text-align: center;
  position: absolute;
  left: 0%;
  bottom: -6vh;
  padding-left: 2vw;
}

.lcm-rod-container {
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: center;
  position: relative;
  transition: opacity 0.5s ease;
  width: 20%; /* Give rods containers space */
}

.lcm-rod {
  width: 0.8vw;
  background: rgba(255, 255, 255, 0.7);
  border-radius: 0.4vw;
  position: relative;
  transition: all 0.5s ease-in-out;
}

.lcm-node-stack {
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  flex-direction: column-reverse;
  gap: 0.5vh;
}
.lcm-node-stack .tree-node {
  position: relative !important;
  opacity: 1;
  transition: opacity 0.5s ease;
}

.lcm-axis-bar {
  display: flex;
  justify-content: space-around;
  width: 100%;
}

.lcm-axis-label {
  margin-top: 1vh;
  font-size: 1.5vw;
  font-weight: bold;
  color: white;
  transition: opacity 0.5s ease;
  width: 20%; /* Match rod container width */
  text-align: center;
}

/* --- General Animations & Controls --- */
@keyframes shake {
  0%,
  100% {
    transform: translateX(0);
  }
  25% {
    transform: translateX(-8px);
  }
  50% {
    transform: translateX(8px);
  }
  75% {
    transform: translateX(-8px);
  }
}

.btn {
  padding: 1vh 3vw;
  border: 1px solid transparent;
  border-radius: 4vw;
  font-size: calc(0.5rem + 1.25vw);
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
}
.btn:hover:not([disabled]) {
  transform: translateY(-2px);
}
.btn-primary {
  background: linear-gradient(145deg, #fdbe35, #fba92d);
  box-shadow: 0 4px 0px rgba(206, 141, 0, 0.6);
  color: #fff;
}
.btn-secondary {
  background-color: rgba(255, 255, 255, 0.2);
  color: #f0f0f0;
  border-color: rgba(255, 255, 255, 0.3);
}
.btn[disabled] {
  cursor: not-allowed;
  transform: none;
  opacity: 0.4;
}
.step-counter {
  display: none;
}

/* --- LCM Question Screen Styles --- */
.lcm-question-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
}

.lcm-question-container .lcm-graph-wrapper {
  width: 80%;
  max-width: 60vw;
}

.lcm-options-container {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 2vw;
  width: 100%;
  flex-wrap: wrap;
}

.lcm-option-button {
  padding: 1.5vh 3vw;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-radius: 1.5vw;
  font-size: calc(0.5rem + 1.5vw);
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  background: linear-gradient(145deg, #fba92d, #fdbe35);
  color: white;
  box-shadow: 0 0.5vh 1vh rgba(0, 0, 0, 0.3);
  min-width: 12vw;
  text-align: center;
}

.lcm-option-button:hover:not([disabled]) {
  transform: translateY(-0.3vh);
  box-shadow: 0 0.8vh 1.5vh rgba(0, 0, 0, 0.4);
  background: linear-gradient(145deg, #fdbe35, #fba92d);
}

.lcm-option-button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}

.lcm-option-button.shake {
  animation: shake 0.5s ease-in-out;
  background: linear-gradient(145deg, #d32f2f, #f44336);
}

/* --- FTUE STYLES --- */
#hand-ftue {
  position: fixed;
  width: 6vw;
  height: auto;
  z-index: 10000;
  pointer-events: none;
  opacity: 0;
  display: none;
  transform: translate(-30%, -20%);
  transition: top 0.3s ease, left 0.3s ease;
}
#hand-ftue img {
  width: 100%;
  height: auto;
}
.hand-animating {
  display: block !important;
  animation: hand-tap-animation 1.5s ease-in-out infinite;
}
@keyframes hand-tap-animation {
  0%,
  100% {
    opacity: 0;
    transform: translate(-30%, -20%) scale(1.1);
  }
  20%,
  80% {
    opacity: 1;
    transform: translate(-30%, -20%) scale(1.1);
  }
  50% {
    transform: translate(-30%, -20%) scale(0.95);
  }
}

#start-button-container {
  display: flex;
  flex-direction: row;
  justify-content: center;
}

/********************************************
 * 7) HIGHLIGHT AND FINAL SUMMARY STYLES
 *********************************************/
.highlight {
  transition: transform 0.2s ease-in-out;
  animation: highlight-anim 0.8s ease-in-out;
}

@keyframes highlight-anim {
  50% {
    transform: scale(1.2);
  }
}
.tree-node.highlight {
  box-shadow: 0 0 1vw 0.5vw #00aeff;
}
.tree-node.prime.highlight,
.step-factor.highlight {
  box-shadow: 0 0 1vw 0.5vw #00ff4c;
}

.num-prime {
  color: #2d9d49;
  transition: all 0.3s ease;
  display: inline-block;
}
.num-root {
  color: #096ac5;
  transition: all 0.3s ease;
  display: inline-block;
}
.num-prime.highlight {
  text-shadow: 0.1vw 0.1vw 0.2vw #81c784;
  transform: scale(1.2);
}
.num-root.highlight {
  text-shadow: 0.1vw 0.1vw 0.2vw #6cbfff;
  transform: scale(1.2);
}